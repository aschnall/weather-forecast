{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment'; // const WeatherList = props => {\n// \tconst weather = props.weather.map(day => {\n// \t\treturn <WeatherCard \n// \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n// \t\t\t\t\t\ttype={day.weather[0].description}\n// \t\t\t\t\t\ticon={day.weather[0].icon}\n// \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n// \t\t\t\t\t\tkey={day.dt}\n// \t\t\t\t\t\tlist={props.temp}\n// \t\t\t\t\t/>\n// \t});\n// \treturn (\n// \t\t<div className='forecast-box'>\n// \t\t\t{weather}\n// \t\t</div>\n// \t)\n// }\n// export default WeatherList;\n\nclass WeatherList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n    this.weather = this.props.weather.map(day => {\n      return /*#__PURE__*/React.createElement(WeatherCard, {\n        date: moment(day.dt * 1000).format('ddd, MMM Do'),\n        type: day.weather[0].description,\n        icon: day.weather[0].icon,\n        temp: Math.round(day.main.temp * 9 / 5 - 459.67),\n        key: day.dt,\n        list: this.state.list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 10\n        }\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      list: this.props.weater.list\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, weather());\n  }\n\n}\n\nexport default WeatherList;","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js"],"names":["React","WeatherCard","moment","WeatherList","Component","state","list","weather","props","map","day","dt","format","description","icon","Math","round","main","temp","componentDidUpdate","setState","weater","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAGA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAFiC;AAAA,SAOzCC,OAPyC,GAO/B,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB,CAAuBC,GAAG,IAAI;AACvC,0BAAO,oBAAC,WAAD;AACH,QAAA,IAAI,EAAER,MAAM,CAACQ,GAAG,CAACC,EAAJ,GAAO,IAAR,CAAN,CAAoBC,MAApB,CAA2B,aAA3B,CADH;AAEH,QAAA,IAAI,EAAEF,GAAG,CAACH,OAAJ,CAAY,CAAZ,EAAeM,WAFlB;AAGH,QAAA,IAAI,EAAEH,GAAG,CAACH,OAAJ,CAAY,CAAZ,EAAeO,IAHlB;AAIH,QAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAYN,GAAG,CAACO,IAAJ,CAASC,IAAV,GAAgB,CAAhB,GAAkB,CAAlB,GAAsB,MAAjC,CAJH;AAKH,QAAA,GAAG,EAAER,GAAG,CAACC,EALN;AAMH,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAQA,KATS,CAP+B;AAAA;;AAGzCa,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,QAAL,CAAc;AAACd,MAAAA,IAAI,EAAC,KAAKE,KAAL,CAAWa,MAAX,CAAkBf;AAAxB,KAAd;AACA;;AAaDgB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEf,OAAO,EADT,CADD;AAKA;;AAxBwC;;AA2B1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment';\n\n\n// const WeatherList = props => {\n// \tconst weather = props.weather.map(day => {\n// \t\treturn <WeatherCard \n// \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n// \t\t\t\t\t\ttype={day.weather[0].description}\n// \t\t\t\t\t\ticon={day.weather[0].icon}\n// \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n// \t\t\t\t\t\tkey={day.dt}\n// \t\t\t\t\t\tlist={props.temp}\n// \t\t\t\t\t/>\n// \t});\n\n// \treturn (\n// \t\t<div className='forecast-box'>\n// \t\t\t{weather}\n// \t\t</div>\n// \t)\n// }\n\t\n\n// export default WeatherList;\n\n\nclass WeatherList extends React.Component {\n\t\n\tstate = {list: []};\n\tcomponentDidUpdate() {\n\t\tthis.setState({list:this.props.weater.list})\n\t}\n\t\n\tweather = this.props.weather.map(day => {\n\t\treturn <WeatherCard \n\t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n\t\t\t\t\t\ttype={day.weather[0].description}\n\t\t\t\t\t\ticon={day.weather[0].icon}\n\t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n\t\t\t\t\t\tkey={day.dt}\n\t\t\t\t\t\tlist={this.state.list}\n\t\t\t\t\t/>\n\t});\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='forecast-box'>\n\t\t\t\t{weather()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WeatherList;\n\t"]},"metadata":{},"sourceType":"module"}