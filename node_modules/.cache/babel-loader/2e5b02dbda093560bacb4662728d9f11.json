{"ast":null,"code":"// import React from 'react';\n// const groupByDate = responseData => {\n// \tconst today = new Date();\n// \tconst day = 60 * 60 * 24 * 1000;\n// \tconst dateBins = {};\n// \tconst nBins = 6; // there can be reports for up to 6 distinct dates\n// \tfor (let i = 0; i < nBins; i++) {\n// \t    // set up a bin (empty array) for each date\n// \t    const date = new Date(today.getTime() + i * day);\n// \t    dateBins[date.getDate()] = [];\n// \t}\n// \tconst reports = responseData;\n// \tconsole.log(responseData);\n// \tfor (const report of reports) {\n// \t    const reportDate = new Date(report.dt * 1000).getDate();\n// \t    console.log(reportDate);\n// \t    dateBins[reportDate].push(report);\n// \t}\n// \tconsole.log(dateBins);\n// \treturn temps(dateBins);\n// }\n// const temps = dailyReport => {\n// \tlet dailyData = { maxTemp: [], minTemp: [] };\n//   let max = 0;\n//   let min = 0;\n//   for (let i = 0; i < 6; i++) {\n//   \tmax = dailyReport[Object.keys(dailyReport)[i]].reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n//   \tmin = dailyReport[Object.keys(dailyReport)[i]].reduce((min, current) => current.main.temp_min < min ? current.main.temp_min : min, 1000);\n//   \tif (max !== 0) {\n//   \t\tdailyData['maxTemp'].push(max);\t\t\n//   \t}\n//   \tif (min !== 1000) {\n//   \t\tdailyData['minTemp'].push(min);\t\t\n//   \t}\n// \t}\n// \tconsole.log(dailyData);\n// \treturn dailyData;\n// }\n// const Temperature = props => {\n// \tlet temp = {};\n// \ttemp = groupByDate(props.weather);\n// \tconst highTemp = temp.maxTemp;\n// \tconst lowTemp = temp.minTemp;\n// \treturn (\n// \t\t<div>hello</div>\n// \t)\n// }\n// export default Temperature;\n// // \tconst today = new Date();\n// // \tconst day = 60 * 60 * 24 * 1000;\n// // \tconst dateBins = {};\n// // \tconst nBins = 6; // there can be reports for up to 6 distinct dates\n// // \tfor (let i = 0; i < nBins; i++) {\n// // \t    // set up a bin (empty array) for each date\n// // \t\tconst date = new Date(today.getTime() + i * day);\n// // \t\tdateBins[date.getDate()] = [];\n// // \t}\n// // \tconst reports = responseData;\n// // \tfor (const report of reports) {\n// //   \tconst reportDate = Number(report.dt_txt.slice(8,10));\n// //   \tdateBins[reportDate].push(report);\n// //   }\n// //   return temps(dateBins);\n// // }","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/components/Temperature.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n\n// const groupByDate = responseData => {\n// \tconst today = new Date();\n// \tconst day = 60 * 60 * 24 * 1000;\n\n// \tconst dateBins = {};\n// \tconst nBins = 6; // there can be reports for up to 6 distinct dates\n\n// \tfor (let i = 0; i < nBins; i++) {\n// \t    // set up a bin (empty array) for each date\n// \t    const date = new Date(today.getTime() + i * day);\n// \t    dateBins[date.getDate()] = [];\n// \t}\n\n// \tconst reports = responseData;\n// \tconsole.log(responseData);\n// \tfor (const report of reports) {\n// \t    const reportDate = new Date(report.dt * 1000).getDate();\n// \t    console.log(reportDate);\n// \t    dateBins[reportDate].push(report);\n// \t}\n// \tconsole.log(dateBins);\n// \treturn temps(dateBins);\n// }\n\n// const temps = dailyReport => {\n// \tlet dailyData = { maxTemp: [], minTemp: [] };\n//   let max = 0;\n//   let min = 0;\n//   for (let i = 0; i < 6; i++) {\n//   \tmax = dailyReport[Object.keys(dailyReport)[i]].reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n//   \tmin = dailyReport[Object.keys(dailyReport)[i]].reduce((min, current) => current.main.temp_min < min ? current.main.temp_min : min, 1000);\n//   \tif (max !== 0) {\n//   \t\tdailyData['maxTemp'].push(max);\t\t\n//   \t}\n//   \tif (min !== 1000) {\n//   \t\tdailyData['minTemp'].push(min);\t\t\n//   \t}\n// \t}\n// \tconsole.log(dailyData);\n// \treturn dailyData;\n// }\n\n// const Temperature = props => {\n// \tlet temp = {};\n// \ttemp = groupByDate(props.weather);\n// \tconst highTemp = temp.maxTemp;\n// \tconst lowTemp = temp.minTemp;\n\n// \treturn (\n// \t\t<div>hello</div>\n// \t)\n// }\n\n\n// export default Temperature;\n\n\n\n\n// // \tconst today = new Date();\n// // \tconst day = 60 * 60 * 24 * 1000;\n\n// // \tconst dateBins = {};\n// // \tconst nBins = 6; // there can be reports for up to 6 distinct dates\n\n// // \tfor (let i = 0; i < nBins; i++) {\n// // \t    // set up a bin (empty array) for each date\n// // \t\tconst date = new Date(today.getTime() + i * day);\n// // \t\tdateBins[date.getDate()] = [];\n// // \t}\n// // \tconst reports = responseData;\n// // \tfor (const report of reports) {\n// //   \tconst reportDate = Number(report.dt_txt.slice(8,10));\n// //   \tdateBins[reportDate].push(report);\n// //   }\n// //   return temps(dateBins);\n// // }\n"]},"metadata":{},"sourceType":"module"}