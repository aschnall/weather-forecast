{"ast":null,"code":"import React from 'react';\n\nconst groupByDate = responseData => {\n  const today = new Date();\n  const day = 60 * 60 * 24 * 1000;\n  const dateBins = {};\n  const nBins = 6; // there can be reports for up to 6 distinct dates\n\n  for (let i = 0; i < nBins; i++) {\n    // set up a bin (empty array) for each date\n    const date = new Date(today.getTime() + i * day);\n    dateBins[date.getDate()] = [];\n  }\n\n  const reports = responseData;\n\n  for (const report of reports) {\n    const reportDate = Number(report.dt_txt.slice(8, 10));\n    dateBins[reportDate].push(report);\n  }\n\n  return temps(dateBins);\n};\n\nconst temps = dailyReport => {\n  let dailyData = {\n    maxTemp: [],\n    minTemp: []\n  };\n  let max = 0;\n  let min = 0;\n\n  for (let i = 0; i < 6; i++) {\n    max = dailyReport[Object.keys(dailyReport)[i]].reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n    min = dailyReport[Object.keys(dailyReport)[i]].reduce((min, current) => current.main.temp_min < min ? current.main.temp_min : min, 1000);\n\n    if (max !== 0) {\n      dailyData['maxTemp'].push(max);\n    }\n\n    if (min !== 1000) {\n      dailyData['minTemp'].push(min);\n    }\n  }\n\n  return dailyData;\n};\n\nconst Temperature = props => {};","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/components/Temperature.js"],"names":["React","groupByDate","responseData","today","Date","day","dateBins","nBins","i","date","getTime","getDate","reports","report","reportDate","Number","dt_txt","slice","push","temps","dailyReport","dailyData","maxTemp","minTemp","max","min","Object","keys","reduce","current","main","temp_max","temp_min","Temperature","props"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAGC,YAAY,IAAI;AACnC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,GAAG,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA3B;AAEA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,KAAK,GAAG,CAAd,CALmC,CAKlB;;AAEjB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5B;AACH,UAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASD,KAAK,CAACO,OAAN,KAAkBF,CAAC,GAAGH,GAA/B,CAAb;AACAC,IAAAA,QAAQ,CAACG,IAAI,CAACE,OAAL,EAAD,CAAR,GAA2B,EAA3B;AACA;;AACD,QAAMC,OAAO,GAAGV,YAAhB;;AACA,OAAK,MAAMW,MAAX,IAAqBD,OAArB,EAA8B;AAC5B,UAAME,UAAU,GAAGC,MAAM,CAACF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,EAAsB,EAAtB,CAAD,CAAzB;AACAX,IAAAA,QAAQ,CAACQ,UAAD,CAAR,CAAqBI,IAArB,CAA0BL,MAA1B;AACA;;AACD,SAAOM,KAAK,CAACb,QAAD,CAAZ;AACD,CAlBD;;AAoBA,MAAMa,KAAK,GAAGC,WAAW,IAAI;AAC3B,MAAIC,SAAS,GAAG;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAhB;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC3BgB,IAAAA,GAAG,GAAGJ,WAAW,CAACM,MAAM,CAACC,IAAP,CAAYP,WAAZ,EAAyBZ,CAAzB,CAAD,CAAX,CAAyCoB,MAAzC,CAAgD,CAACJ,GAAD,EAAMK,OAAN,KAAkBA,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBP,GAAxB,GAA8BK,OAAO,CAACC,IAAR,CAAaC,QAA3C,GAAsDP,GAAxH,EAA6H,CAA7H,CAAN;AACAC,IAAAA,GAAG,GAAGL,WAAW,CAACM,MAAM,CAACC,IAAP,CAAYP,WAAZ,EAAyBZ,CAAzB,CAAD,CAAX,CAAyCoB,MAAzC,CAAgD,CAACH,GAAD,EAAMI,OAAN,KAAkBA,OAAO,CAACC,IAAR,CAAaE,QAAb,GAAwBP,GAAxB,GAA8BI,OAAO,CAACC,IAAR,CAAaE,QAA3C,GAAsDP,GAAxH,EAA6H,IAA7H,CAAN;;AACA,QAAID,GAAG,KAAK,CAAZ,EAAe;AACdH,MAAAA,SAAS,CAAC,SAAD,CAAT,CAAqBH,IAArB,CAA0BM,GAA1B;AACA;;AACD,QAAIC,GAAG,KAAK,IAAZ,EAAkB;AACjBJ,MAAAA,SAAS,CAAC,SAAD,CAAT,CAAqBH,IAArB,CAA0BO,GAA1B;AACA;AACF;;AACD,SAAOJ,SAAP;AACA,CAfD;;AAmBA,MAAMY,WAAW,GAAGC,KAAK,IAAI,CAG5B,CAHD","sourcesContent":["import React from 'react';\n\nconst groupByDate = responseData => {\n\tconst today = new Date();\n\tconst day = 60 * 60 * 24 * 1000;\n\n\tconst dateBins = {};\n\tconst nBins = 6; // there can be reports for up to 6 distinct dates\n\n\tfor (let i = 0; i < nBins; i++) {\n\t    // set up a bin (empty array) for each date\n\t\tconst date = new Date(today.getTime() + i * day);\n\t\tdateBins[date.getDate()] = [];\n\t}\n\tconst reports = responseData;\n\tfor (const report of reports) {\n  \tconst reportDate = Number(report.dt_txt.slice(8,10));\n  \tdateBins[reportDate].push(report);\n  }\n  return temps(dateBins);\n}\n\nconst temps = dailyReport => {\n  let dailyData = { maxTemp: [], minTemp: [] };\n  let max = 0;\n  let min = 0;\n  for (let i = 0; i < 6; i++) {\n  \tmax = dailyReport[Object.keys(dailyReport)[i]].reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n  \tmin = dailyReport[Object.keys(dailyReport)[i]].reduce((min, current) => current.main.temp_min < min ? current.main.temp_min : min, 1000);\n  \tif (max !== 0) {\n  \t\tdailyData['maxTemp'].push(max);\t\t\n  \t}\n  \tif (min !== 1000) {\n  \t\tdailyData['minTemp'].push(min);\t\t\n  \t}\n\t}\n\treturn dailyData;\n}\n\n\n\nconst Temperature = props => {\n\n\n}"]},"metadata":{},"sourceType":"module"}