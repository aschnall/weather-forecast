{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/weather/src/App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\nimport './App.css';\nimport moment from 'moment';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: [],\n      date: [],\n      high: [],\n      icon: []\n    };\n\n    this.onSearchSubmit = async term => {\n      let weatherData = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${term}&appid=8c5fb53f5e47ec25460b34d5e83664e9`);\n      weatherData = await weatherData.json();\n      const {\n        list\n      } = weatherData;\n      const dailyWeather = list.filter(item => {\n        return item.dt_txt.includes('15:00:00');\n      });\n      console.log(dailyWeather);\n      const date = dailyWeather.map(day => moment(day.dt * 1000).format('MMM Do'));\n      const type = dailyWeather.map(day => day.weather[0].description);\n      const temp = dailyWeather.map(day => Math.round(day.main.temp * 9 / 5 - 459.67));\n      const icon = dailyWeather.map(day => day.weather[0].icon);\n      this.setState({\n        type,\n        date,\n        temp,\n        icon\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(WeatherCard, {\n      date: this.state.date[0],\n      type: this.state.type[0],\n      temp: this.state.temp[0],\n      icon: this.state.icon[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(WeatherCard, {\n      date: this.state.date[1],\n      type: this.state.type[1],\n      temp: this.state.temp[1],\n      icon: this.state.icon[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(WeatherCard, {\n      date: this.state.date[2],\n      type: this.state.type[2],\n      temp: this.state.temp[2],\n      icon: this.state.icon[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(WeatherCard, {\n      date: this.state.date[3],\n      type: this.state.type[3],\n      temp: this.state.temp[3],\n      icon: this.state.icon[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(WeatherCard, {\n      date: this.state.date[4],\n      type: this.state.type[4],\n      temp: this.state.temp[4],\n      icon: this.state.icon[4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/App.js"],"names":["React","SearchBar","WeatherCard","moment","App","Component","state","type","date","high","icon","onSearchSubmit","term","weatherData","fetch","json","list","dailyWeather","filter","item","dt_txt","includes","console","log","map","day","dt","format","weather","description","temp","Math","round","main","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherCard from './WeatherCard';\nimport './App.css';\nimport moment from 'moment';\n\nclass App extends React.Component {\n\n\tstate = { type: [], date: [], high: [], icon: [] }; \n\n\tonSearchSubmit = async term => {\n\t\tlet weatherData = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${term}&appid=8c5fb53f5e47ec25460b34d5e83664e9`);\n\t\tweatherData = await weatherData.json();\n\t\tconst { list } = weatherData;\n\t\tconst dailyWeather = list.filter((item) => {\n\t\t\treturn item.dt_txt.includes('15:00:00');\n\t\t})\n\t\tconsole.log(dailyWeather);\n\t\tconst date = dailyWeather.map(day => moment(day.dt*1000).format('MMM Do'));\n\t\tconst type = dailyWeather.map(day => day.weather[0].description);\n\t\tconst temp = dailyWeather.map(day => Math.round((day.main.temp)*9/5 - 459.67));\n\t\tconst icon = dailyWeather.map(day => day.weather[0].icon);\n\t\tthis.setState({ \n\t\t\ttype,\n\t\t\tdate,\n\t\t\ttemp,\n\t\t\ticon\n\t\t\t });\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='ui container'>\n\t\t\t\t<div className='search'>\n\t\t\t\t\t<SearchBar onSubmit={this.onSearchSubmit} />\n\t\t\t\t</div>\n\t\t\t\t<div className='forecast-box'>\n\t\t\t\t\t<WeatherCard date={this.state.date[0]} type={this.state.type[0]} temp={this.state.temp[0]} icon={this.state.icon[0]}/>\n\t\t\t\t\t<WeatherCard date={this.state.date[1]} type={this.state.type[1]} temp={this.state.temp[1]} icon={this.state.icon[1]}/>\n\t\t\t\t\t<WeatherCard date={this.state.date[2]} type={this.state.type[2]} temp={this.state.temp[2]} icon={this.state.icon[2]}/>\n\t\t\t\t\t<WeatherCard date={this.state.date[3]} type={this.state.type[3]} temp={this.state.temp[3]} icon={this.state.icon[3]}/>\n\t\t\t\t\t<WeatherCard date={this.state.date[4]} type={this.state.type[4]} temp={this.state.temp[4]} icon={this.state.icon[4]}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}