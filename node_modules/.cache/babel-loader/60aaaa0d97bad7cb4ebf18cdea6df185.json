{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment';\n\nclass WeatherList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: this.props.weather\n    };\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (previousProps.weather !== this.props.weather) {\n      this.setState({\n        data: this.props.weather\n      });\n      console.log(this.state.data);\n      const weather = this.state.data.map(day => {\n        return /*#__PURE__*/React.createElement(WeatherCard, {\n          date: moment(day.dt * 1000).format('ddd, MMM Do'),\n          type: day.weather[0].description,\n          temp: Math.round(day.main.temp * 9 / 5 - 459.67),\n          icon: day.weather[0].icon,\n          key: day.dt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 12\n          }\n        });\n      });\n      console.log(weather);\n    }\n  } // \tconst weather = this.state.data.map(day => {\n  // \t\treturn <WeatherCard \n  // \t\t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n  // \t\t\t\t\t\t\ttype={day.weather[0].description}\n  // \t\t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n  // \t\t\t\t\t\t\ticon={day.weather[0].icon}\n  // \t\t\t\t\t\t\tkey = {day.dt}\n  // \t\t\t\t\t\t/>\n  // \t})\n  // \tconsole.log(weather);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, \"test\");\n  }\n\n}\n\nexport default WeatherList; // const weather = props.weather.map(day => {\n// \treturn <WeatherCard \n// \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n// \t\t\t\t\t\ttype={day.weather[0].description}\n// \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n// \t\t\t\t\t\ticon={day.weather[0].icon}\n// \t\t\t\t\t\tkey = {day.dt}\n// \t\t\t\t\t/>","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js"],"names":["React","WeatherCard","moment","WeatherList","Component","state","data","props","weather","componentDidUpdate","previousProps","previousState","setState","console","log","map","day","dt","format","description","Math","round","main","temp","icon","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AAAEC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAAnB,KAFiC;AAAA;;AAIzCC,EAAAA,kBAAkB,CAACC,aAAD,EAAgBC,aAAhB,EAA+B;AAChD,QAAID,aAAa,CAACF,OAAd,KAA0B,KAAKD,KAAL,CAAWC,OAAzC,EAAkD;AACjD,WAAKI,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAAlB,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,IAAvB;AACA,YAAME,OAAO,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAoBC,GAAG,IAAI;AAC1C,4BAAO,oBAAC,WAAD;AACJ,UAAA,IAAI,EAAEd,MAAM,CAACc,GAAG,CAACC,EAAJ,GAAO,IAAR,CAAN,CAAoBC,MAApB,CAA2B,aAA3B,CADF;AAEJ,UAAA,IAAI,EAAEF,GAAG,CAACR,OAAJ,CAAY,CAAZ,EAAeW,WAFjB;AAGJ,UAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAYL,GAAG,CAACM,IAAJ,CAASC,IAAV,GAAgB,CAAhB,GAAkB,CAAlB,GAAsB,MAAjC,CAHF;AAIJ,UAAA,IAAI,EAAEP,GAAG,CAACR,OAAJ,CAAY,CAAZ,EAAegB,IAJjB;AAKJ,UAAA,GAAG,EAAIR,GAAG,CAACC,EALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOA,OARe,CAAhB;AASAJ,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA;AACD,GAnBwC,CAoB1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCiB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAKA;;AArCwC;;AAyC1C,eAAetB,WAAf,C,CAGC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment';\n\nclass WeatherList extends React.Component {\n\n\tstate = { data: this.props.weather };\n\n\tcomponentDidUpdate(previousProps, previousState) {\n\t\tif (previousProps.weather !== this.props.weather) {\n\t\t\tthis.setState({data: this.props.weather })\n\t\t\tconsole.log(this.state.data);\n\t\t\tconst weather = this.state.data.map(day => {\n\t\t\t\treturn <WeatherCard \n\t\t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n\t\t\t\t\t\t\ttype={day.weather[0].description}\n\t\t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n\t\t\t\t\t\t\ticon={day.weather[0].icon}\n\t\t\t\t\t\t\tkey = {day.dt}\n\t\t\t\t\t\t/>\n\t\t\t})\n\t\t\tconsole.log(weather);\n\t\t}\n\t}\n// \tconst weather = this.state.data.map(day => {\n// \t\treturn <WeatherCard \n// \t\t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n// \t\t\t\t\t\t\ttype={day.weather[0].description}\n// \t\t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n// \t\t\t\t\t\t\ticon={day.weather[0].icon}\n// \t\t\t\t\t\t\tkey = {day.dt}\n// \t\t\t\t\t\t/>\n// \t})\n// \tconsole.log(weather);\n// }\n\trender() {\n\t\treturn (\n\t\t\t<div className='forecast-box'>\n\t\t\t\ttest\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default WeatherList;\n\n\n\t// const weather = props.weather.map(day => {\n\t// \treturn <WeatherCard \n\t// \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n\t// \t\t\t\t\t\ttype={day.weather[0].description}\n\t// \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n\t// \t\t\t\t\t\ticon={day.weather[0].icon}\n\t// \t\t\t\t\t\tkey = {day.dt}\n\t// \t\t\t\t\t/>"]},"metadata":{},"sourceType":"module"}