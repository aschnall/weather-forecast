{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment';\n\nconst groupByDate = responseData => {\n  const today = new Date();\n  const day = 60 * 60 * 24 * 1000;\n  const dateBins = {};\n  const nBins = 6; // there can be reports for up to 6 distinct dates\n\n  for (let i = 0; i < nBins; i++) {\n    // set up a bin (empty array) for each date\n    const date = new Date(today.getTime() + i * day);\n    dateBins[date.getDate()] = [];\n  }\n\n  const reports = responseData;\n\n  for (const report of reports) {\n    const reportDate = report.dt_text.slice(5, 7);\n    console.log(reportDate);\n    dateBins[reportDate].push(report);\n  }\n\n  const test = dateBins[Object.keys(dateBins)[0]];\n  console.log(test);\n  const maxTemp = test.reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n  console.log(maxTemp);\n};\n\nconst WeatherList = props => {\n  const test = groupByDate(props.weather); // const weather = props.weather.map(day => {\n  // \treturn <WeatherCard \n  // \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n  // \t\t\t\t\t\ttype={day.weather[0].description}\n  // \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n  // \t\t\t\t\t\ticon={day.weather[0].icon}\n  // \t\t\t\t\t\tkey = {day.dt}\n  // \t\t\t\t\t/>\n  // })\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, \"test\");\n};\n\nexport default WeatherList;","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/weather/src/components/WeatherList.js"],"names":["React","WeatherCard","moment","groupByDate","responseData","today","Date","day","dateBins","nBins","i","date","getTime","getDate","reports","report","reportDate","dt_text","slice","console","log","push","test","Object","keys","maxTemp","reduce","max","current","main","temp_max","WeatherList","props","weather"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,MAAMC,WAAW,GAAIC,YAAD,IAAkB;AACrC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,GAAG,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA3B;AAEA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,KAAK,GAAG,CAAd,CALqC,CAKpB;;AAEjB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5B;AACH,UAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASD,KAAK,CAACO,OAAN,KAAkBF,CAAC,GAAGH,GAA/B,CAAb;AACAC,IAAAA,QAAQ,CAACG,IAAI,CAACE,OAAL,EAAD,CAAR,GAA2B,EAA3B;AACA;;AACD,QAAMC,OAAO,GAAGV,YAAhB;;AACA,OAAK,MAAMW,MAAX,IAAqBD,OAArB,EAA8B;AAC5B,UAAME,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAuB,CAAvB,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAR,IAAAA,QAAQ,CAACQ,UAAD,CAAR,CAAqBK,IAArB,CAA0BN,MAA1B;AACA;;AACD,QAAMO,IAAI,GAAGd,QAAQ,CAACe,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsB,CAAtB,CAAD,CAArB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,QAAMG,OAAO,GAAGH,IAAI,CAACI,MAAL,CAAY,CAACC,GAAD,EAAMC,OAAN,KAAkBA,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBH,GAAxB,GAA8BC,OAAO,CAACC,IAAR,CAAaC,QAA3C,GAAsDH,GAApF,EAAyF,CAAzF,CAAhB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACD,CAtBD;;AA0BA,MAAMM,WAAW,GAAGC,KAAK,IAAI;AAE5B,QAAMV,IAAI,GAAGnB,WAAW,CAAC6B,KAAK,CAACC,OAAP,CAAxB,CAF4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA,CAnBD;;AAsBA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard';\nimport moment from 'moment';\n\n\nconst groupByDate = (responseData) => {\n\tconst today = new Date();\n\tconst day = 60 * 60 * 24 * 1000;\n\n\tconst dateBins = {};\n\tconst nBins = 6; // there can be reports for up to 6 distinct dates\n\n\tfor (let i = 0; i < nBins; i++) {\n\t    // set up a bin (empty array) for each date\n\t\tconst date = new Date(today.getTime() + i * day);\n\t\tdateBins[date.getDate()] = [];\n\t}\n\tconst reports = responseData;\n\tfor (const report of reports) {\n  \tconst reportDate = report.dt_text.slice(5,7);\n  \tconsole.log(reportDate);\n  \tdateBins[reportDate].push(report);\n  }\n  const test = dateBins[Object.keys(dateBins)[0]];\n  console.log(test);\n  const maxTemp = test.reduce((max, current) => current.main.temp_max > max ? current.main.temp_max : max, 0);\n  console.log(maxTemp);\n}\n\n\n\nconst WeatherList = props => {\n\n\tconst test = groupByDate(props.weather);\n\t// const weather = props.weather.map(day => {\n\t// \treturn <WeatherCard \n\t// \t\t\t\t\t\tdate={moment(day.dt*1000).format('ddd, MMM Do')}\n\t// \t\t\t\t\t\ttype={day.weather[0].description}\n\t// \t\t\t\t\t\ttemp={Math.round((day.main.temp)*9/5 - 459.67)}\n\t// \t\t\t\t\t\ticon={day.weather[0].icon}\n\t// \t\t\t\t\t\tkey = {day.dt}\n\t// \t\t\t\t\t/>\n\t// })\n\n\treturn (\n\t\t<div className='forecast-box'>\n\t\t\ttest\n\t\t</div>\n\t)\n\t\n}\n\n\nexport default WeatherList;\n\n\n"]},"metadata":{},"sourceType":"module"}